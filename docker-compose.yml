version: '3.8'

services:
  # FastAPI Application
  api:
    build: .
    container_name: ai_video_api
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/ai_video_tool
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./temp:/app/temp
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8080 --reload

  # Celery Worker
  celery_worker:
    build: .
    container_name: ai_video_celery_worker
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/ai_video_tool
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./temp:/app/temp
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: celery -A tasks worker --loglevel=info

  # Celery Beat (Scheduler)
  celery_beat:
    build: .
    container_name: ai_video_celery_beat
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/ai_video_tool
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: celery -A tasks beat --loglevel=info

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ai_video_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ai_video_tool
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: ai_video_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: ai_video_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/usr/share/nginx/html/static
      - ./outputs:/usr/share/nginx/html/outputs
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: